<html>
<head>
<title>CGI Made Really Easy</title>

<meta name="description" 
    content="Quick, simple tutorial for CGI programming.  Learn to write CGI 
        scripts fast, if you're already a programmer.  Examples in Perl and C;
        mailer script included.">

<meta name="keywords" content="CGI, script, programming, learning, learn, 
    tutorial, primer, lesson, teach, quick, fast, brief, concise, simple, 
    easy, clear, straightforward, examples, CGI scripts, writing CGI scripts, 
    write CGI scripts">

</head>

<body bgcolor="#FFF8E8" link="#0000FF" vlink="#007090" alink="#00A0FF">

<h1>
<a href="http://www.eff.org/blueribbon.html"><img 
   border=0 src="/images/blueribbon.gif"
   height=30 width=18 alt="Blue Ribbon Campaign for Free Speech"></a>
CGI Made Really Easy
</h1>

<h2>or, Writing CGI scripts to process Web forms</h2>

<table width="100%">
<tr><td><a href="cgi_footnotes.html">Go to Footnotes</a></td>
    <td align=right><a href="/easy/">Go to Other Tutorials</a></td></tr>
</table>

<hr>

<p><img src="new.gif" width=28 height=11 alt="NEW!">
<i>March 12, 1999 --  And now, a <a href="portuguese/">Portuguese version</a>
(em portugu&ecirc;s)!  Thanks very much to
<a href="mailto:cfchagas@excite.com?subject=CGI Realmente Facil">Claudio F. Chagas</a> 
for the fine translation.</i>

<p>

<i><a href="german/">Auf Deutsche</a> (in German), as translated by 
    <a href="mailto:friedemann.wachsmuth@on-line.de?subject=CGI leicht gemacht!">Friedemann Wachsmuth</a></i>
<br>
<i><a href="spanish/">En espa&ntilde;ol</a> (in Spanish), as translated by 
    <a href="mailto:raam@mail.entropia.com.mx?subject=El CGI Hecho Realmente Facil">René Alvarez Macotela</a></i>


<p><b>So it's 4:00</b>, your boss needs a CGI script written by 4:30, and
you don't even know what CGI stands for.  You've come to the right
place.

<p>There's not much to it, despite any intimidating hype you might
have heard.  If you can read from STDIN and write to STDOUT,
then you can write CGI scripts.
If you're a programmer already, this primer can teach you the basics 
of CGI in a few minutes.  
<i>If you're not a programmer, this primer won't help you much-- sorry.  
Learn some programming, even shell scripting, and come back when you're 
done.  Good luck!</i>


<p>This primer focuses on writing CGI scripts to process HTML forms on the 
Web.
It skips some details, but can bring you up to speed <i>fast</i> 
(literally an hour or less), and covers 90% of real-world situations.
When you feel the need, check out the
<a href="http://hoohoo.ncsa.uiuc.edu/cgi/">full CGI spec</a>.
For help with writing HTML forms, see
<a href="http://www.jmarshall.com/easy/html/#forms">this tutorial fragment</a>,
or 
<a href="http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/fill-out-forms/overview.html">this 
documentation at NCSA</a>.

<p>Once you've read this page, see the
<a href="cgi_footnotes.html">footnotes</a> for sample scripts and
other topics.

<p><hr><p>

<h2>What is CGI?</h2>

CGI is not a language.  It's a simple protocol that can be used to 
communicate between Web forms and your program.  A CGI script can be 
written in any language that can read STDIN, write to STDOUT, and read 
environment variables, i.e. virtually any programming language, including 
C, Perl, or even shell scripting.

<h2>Structure of a CGI Script</h2>

<p>Here's the typical sequence of steps for a CGI script:
<ol>
<li>Read the user's form input.
<li>Do what you want with the data.
<li>Write the HTML response to STDOUT.
</ol>

<p>The first and last steps are described below.


<p><hr><p>

<h2>Reading the User's Form Input</h2>

<p>When the user submits the form, your script receives the form data as
a set of name-value pairs.  The names are what you defined in the 
INPUT tags (or SELECT or TEXTAREA tags), and the values are whatever the
user typed in or selected.  (Users can also submit files with forms, but
this primer doesn't cover that.)

<p>This set of name-value pairs is given to you as one long string, which
you need to parse.  It's not very complicated, and there are plenty
of existing routines to do it for you.
Here's <a href="getcgi.pl.txt">one in Perl</a>,
<a href="getcgi_s.pl.txt">a simpler one in Perl</a>, or
<a href="getcgi.c.txt">one in C</a>.
For a more elaborate CGI framework, see Perl's
<a href="http://www.genome.wi.mit.edu/ftp/pub/software/WWW/">CGI.pm</a>
module.
The <a href="http://www.yahoo.com/Computers_and_Internet/Internet/World_Wide_Web/CGI___Common_Gateway_Interface/">CGI
directory at Yahoo</a> includes many CGI routines (and pre-written scripts), 
in various languages.  

<p>If that's good enough for you, skip to the next section.  If you'd 
rather do it yourself, or you're just curious, here's the format of the 
long string:

<blockquote>

<blockquote>
<b>"name1=value1&name2=value2&name3=value3"</b>
</blockquote>

<p>So just split on the ampersands and equal signs.  Then, do two more 
things to each name and value:
<ol>
<li>Convert all "+" characters to spaces, and
<li>Convert all "%xx" sequences to the single character whose ascii value
    is "xx", in hex.  For example, convert "%3d" to "=".
</ol>
This is needed because the original long string is <b>URL-encoded</b>, 
to allow for equal signs, ampersands, and so forth in the user's input.

<p>So where do you get the long string?  That depends on the HTTP method the
form was submitted with:
<ul>
<li>For GET submissions, it's in the environment variable <b>QUERY_STRING</b>.
<li>For POST submissions, read it from STDIN.  The exact number of bytes 
to read is in the environment variable <b>CONTENT_LENGTH</b>.
</ul>

<p><i>(If you're wondering about the difference between GET and POST, see the
<a href="cgi_footnotes.html#getvspost">footnote discussing it</a>.
Short answer: POST is more general-purpose, but GET is fine for small 
forms.)</i>

</blockquote>

<p><hr><p>

<h2>Sending the Response Back to the User</h2>

<p>First, write the line 
<blockquote><tt>Content-type: text/html</tt></blockquote>
plus another blank
line, to STDOUT.  After that, write your HTML response page to STDOUT,
and it will be sent to the user when your script is done.  That's all
there is to it.

<p>Yes, you're generating HTML code on the fly.  It's not hard; it's
actually pretty straightforward.  HTML was designed to be simple enough
to generate this way.

<p>If you want to send back an image or other non-HTML response,
<a href="cgi_footnotes.html#othertypes">here's how to do it.</a>


<p><hr><p>

<h3>That's it. Good Luck!</h3>

<p>See how easy it is?  If you still don't believe me, go ahead and write
a script.  Make sure to put the file in the right place on your server,
and make it executable; see this
<a href="cgi_footnotes.html#placing">footnote</a> for more hints.

<p>Before you write too many scripts, learn about
<a href="cgi_footnotes.html#security">CGI security issues</a>.

<p>When you need to know more about CGI, see the 
<a href="http://hoohoo.ncsa.uiuc.edu/cgi/">complete CGI specification at 
NCSA</a>.
<a href="http://www.w3.org/">W3C</a> also maintains 
<a href="http://www.w3.org/CGI/">a CGI page</a> with links to
any documents you might need.

<p>Oh yeah, <b>CGI</b> stands for <b>Common Gateway Interface</b>-- in other
words, a standard ("common") way of communicating ("interface") between 
processes on different machines ("gateway", sort of).


<p><hr><p>

<h2>Other Things to Play With</h2>

<p>See the <a href="cgi_footnotes.html">Footnotes Page</a> for the 
following stuff:

<ol>
<li><a href="cgi_footnotes.html#samples">Sample CGI programs</a>
<li><a href="cgi_footnotes.html#mailer">CGI Mailer Script</a>
<li><a href="cgi_footnotes.html#security">Security with CGI Scripts</a>
<li><a href="cgi_footnotes.html#placing">Placing Your Script on the Server</a>
<li><a href="cgi_footnotes.html#location">Sending an Existing File Back as a Response</a>
<li><a href="cgi_footnotes.html#otherenv">Other Useful CGI Environment Variables</a>
<li><a href="cgi_footnotes.html#othertypes">Returning an Image or Other Non-HTML Response 
    from a CGI Script</a>
<li><A HREF="cgi_footnotes.html#getvspost">What is the difference between GET and POST?</A>
<li><a href="cgi_footnotes.html#nph">Gaining More Control, with Non-Parsed Header Scripts</a>
</ol>


<p><hr>

&copy; 1996-1998 <a href="mailto:james@jmarshall.com?subject=CGI Made Really Easy">James Marshall</a>
<br><i>(comments encouraged; for questions, please scan the 
<a href="easy_cgi_faq.html">FAQ</a> first)</i>


<p>
<table width="100%"><tr>
    <td><i>Last Modified: April 18, 1998</i></td>
    <td align=right><i>http://www.jmarshall.com/easy/cgi/</i></td>
</tr></table>

<p>
</body>
</html>
