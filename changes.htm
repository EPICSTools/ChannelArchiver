<html>

<head>
<base>
<title>Channel Archiver Changes</title>
</head>

<body BGCOLOR="#B0B0FF" BACKGROUND="doc/blueback.jpg">
<font face="Comic Sans MS">

<blockquote>
  <h1>Channel Archiver Changes</h1>
  <ul>
    <li>07/20/2000<br>
      Patch #2:<br>
      CHAR data type is now supported, treated like a number.
    <li>07/3/2000<br>
      Patch #1:<br>
      <ul>
      <li>New doc/libio/Layout.htm
      <li>Fixes for SGI, cleaning up signal handling in
          Engine/main.cpp
      </ul>
    <li>06/27/2000<br>
      <font color="#0000A0">Version 1.4</font>:<br>
      <ul>
      <li>Scripting support moved to SWIG,
          replacing the tcl-only ATAC API.
      <li>Scripting allows simple write-access to archive,
          we are working on a python-GUI for archive management
      </ul>
    <li>06/26/2000<br>
        Patch# 6:<br>
	Engine: used 1 month as file default, not 24h<br>
        Engine: more thread safe signal catching<br>
        HTTPServer: Empty client would linger open and
	            cause Engine to hang.
		    Those could be cause by keeping the
                    "Reload" button down in the web browser.
                    How those connections are closed.
                    Hammering the HTTPServer does still
                    consume CPU up to the point were the 
                    WriteThread cannot run,
                    so overwrites can occur.
                    But things should be fine afterwards.
                    The best solution might be a seperate,
                    lower-priority thread for the HTTPServer.
                    This is put off for now.<br>
        LibIO/Bin*: replace stdio by low level IO
                    (open/read/write)
                    to track down thread-related problems.<br>
    <li>06/14/2000<br>
                Patch# 5:<br>
                Testing: SWIG for scripting interface,<br>
                replacing ATAC with CASI - "Channel Archiver Scripting Interface"<br>
                Currently: ported tcl scripts to slightly different API,
                creating python support.<br>
    <li>06/02/2000<br>
                Patches:<br>
                More careful checking for "MultiArchive" master file.<br>
                Other fixes to help Chris Larrieu compile with some HPUX compiler:
                Overlooked namespace std issues, rdbuf()->freeze().
    <li>05/25/2000<br>
                Patches:<br>
                Optional namespace std,<br>
                removed nested class definition for LibIO/CtrlInfoI.
    <li>05/04/2000<br>
      <font color="#0000A0">Version 1.3</font>:<br>
      <ul>
        <LI>"MultiArchive" can read more than one archive,
            easing the previous housekeeping problems:
	    ArchiveEngine can now be restarted e.g. monthly,
            creating easier to manage subarchives
            which can still be viewed as a whole via the MultiArchive.
        <LI>Central ArchiverConfig.h file for sources under ChannelArchiver directory,
            allowing compile-time configuration of Engine, Manager, CGIExport, ... in one place.
        <LI>WinBrowser (and Exporter class) can export linear interpolated spreadsheet data.
        <LI>Adjustments for hp700 at BESSY
        <LI>TCL examples: better response to window resize.
      </ul>
      </LI>
    <li>03/23/2000<br>
      <font color="#0000A0">Version 1.2</font>:<br>
      Optional password for stopping the ArchiveEngine over the Web, to be configured via
      Engine/Config.h.<br>
      TCL example: PlotBrowser.tk</li>
    <li>03/01/2000<br>
      <font color="#0000A0">Version 1.1</font>:<br>
      More documentation about Engine, Manager, ATAC.<br>
      ArchiveManager can read/write ASCII files.<br>
      (for repairing archives the hard way)<br>
      <a href="doc/atac/default.htm">atac</a> allows to read arrays, more example tcl/tk scripts
      to list channels, dump values, browse values in a list box or do X-Y-Plots. </li>
    <li>02/09/2000<br>
      Intruduced version/release scheme to better keep track of changes since the software is no
      longer only at LANL.<br>
      First Release, <font color="#0000A0">Version 1.0</font>.<br>
      Fixed memory leak on RedHat 6.x (should appear on all systems that use that version of
      egcs) by replacing std::string with self-written stdString, maintaining API.<br>
      Fixed CtrlInfo size problem for compatibility with wrong size calculation of original
      engine. </li>
    <li>01/28/2000<br>
      CGIExport: support for retrieving status info and &quot;filled&quot; export where
      unchanged values are repeated; channel list and channel information are now sorted.<br>
      ATAC: Scalar access to data; allows to create e.g. beam statistics with plot.<br>
      WinBrowser: Fixed axis plotting code.</li>
    <li>12/18/1999<br>
      I/O Library: Split pure interface classes from the actual implementation for the original,
      binary data file format. This will now allow the independent developement of other data
      file formats. <br>
      ATAC: Started TCL interface to the I/O library. </li>
    <li>11/08/1999<br>
      The Archive Engine is now multithreaded.<br>
      Fixes as a result of Test run on LEDA at LANL.<br>
      In a test setup the Engine ran fine until the disk got full (PC, original configuration
      files from LEDA, ca. 1200 channels every 30 secs, free disk space of 200MB used after 5-7
      days).<br>
      Switched to/added standard EPICS make system Makefiles.</li>
    <li>10/18/1999<br>
      Profiled &amp; enhanced engine:<br>
      Reduced #of disk accesses.</li>
    <li>9/24/1999<br>
      No warnings left with MS VC++ or g++ (egcs-2.91.66) except for Tools/gnu_regex.c (only
      needed for Win32).<br>
      Eliminated calls to string::copy to make it work on RedHat 5.2.<br>
      Some changes to the Engine to improve performance at higher rate of incoming values. </li>
    <li>9/15/1999<br>
      The new archive engine can read the config files that we use on LEDA and even does some of
      what's written in there. It does handle disabling channels and creates new data files,
      e.g. one per day. The web interface is still simple and on a fixed port (4812), but
      already shows status information for the engine, groups, channels, and allows adding
      channels to groups (not permanent, though).<br>
      The IO-library has only a few warnings left when compiled with egcs (no warnings with MS
      VC). Several bugs have been eliminated. I'm pretty sure that the sequential readout part
      can stay as it is, buffered read might also be OK. The write portion is likely to change
      while I'm still working on the engine. As soon as the engine is believed to be stable
      enough so that I can run it in parallel to the old engine I'll 'freeze' the IO-library by
      actually building it as a library. I might also need a more sophisticated version number
      scheme then. </li>
    <li>6/28/1999<br>
      Compiles on Solaris with egcs </li>
    <li>6/25/1999<br>
      The Archive class now takes a full pathname (with '/' or '\' on Win32, Unix paths with '/'
      only) and opens data files in that directory without calling chdir but generating the
      appropriate names. Thus you can now open more than one Archive. </li>
  </ul>
  <hr>
  <a HREF="mailto:kasemir@lanl.gov"><p>-Kay (kasemir@lanl.gov)</a></p>
</blockquote>
</font>
</body>
</html>
