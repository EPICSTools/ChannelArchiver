<HTML>
<HEAD>
<TITLE>Class Documentation</TITLE>
<BODY BGCOLOR=#F0F0FF BACKGROUND="../blueback.jpg">
<link REL="STYLESHEET" HREF="../style.css" TYPE="text/css">
<BLOCKQUOTE>
<H1><A NAME=Main>MultiArchive Class</A></H1>

The MultiArchive class implements a <A HREF="ArchiveI.htm#Main">ArchiveI</A> interface
for accessing more than one archive.
<P>
The MultiArchive is configured via a "master" archive file,
an ASCII file with the following format:
<BR>
<UL>
<LI>Comments (starting with a number-sign) and empty lines are ignored
<LI>The very first line must be<BR>
    <PRE>master_version=&lt;version number&gt;</PRE>
    There must be no comments preceding this line!
<LI>All remaining lines list one archive name per line
</UL>
<H2>Example 1</H2>
<PRE>
 master_version=1
 # First check the "fast" archive
 /archives/fast/dir
 # Then check the "main" archive
 /archives/main/2001_05/dir
 /archives/main/2001_04/dir
 /archives/main/2001_03/dir
 /archives/main/2001_02/dir
 /archives/main/2001/dir
</PRE>
<H2>Example 2</H2>
<PRE>
 master_version=2
 # First check the "fast" archive
 05/29/2001 00:00:00 05/30/2001 00:00:00 /archives/fast/dir
 # Then check the "main" archive
 05/01/2001 00:00:00 06/01/2001 00:00:00 /archives/main/2001_05/dir
 04/01/2001 00:00:00 05/01/2001 00:00:00 /archives/main/2001_04/dir
 03/01/2001 00:00:00 04/01/2001 00:00:00 /archives/main/2001_03/dir
 02/01/2001 00:00:00 03/01/2001 00:00:00 /archives/main/2001_02/dir
 01/01/2001 00:00:00 01/01/2002 00:00:00 /archives/main/2001/dir
</PRE>
<p>
If valid timestamps are provided during construction of the Archive-object,
only those sub-archives, that match the given time interval, are used for
retrieval.<br>In version <em>1</em> all sub-archives are opened and the
min-/max-timestamps are retrieved.<br>In version <em>2</em> the time-intervals
for the sub-archives have to be in the master-file.
<H2>Differences - performance using a real-world example</h2>
      A MultiArchive consisting of ~50 weekly archives containing ~3000
      channels worth ~1GB of data each.<br>
      Command: <em>ArchiveExport &lt;MultiArchive&gt; -match &lt;pattern&gt;
      <dl>
      <dt><b>Plain (old style) access (no timestamps)</b>
      <dd>All 50 archives are searched for a channel matching &lt;pattern&gt; and
	  data within timestamp is retrieved<br><font color=red>&rArr; ~100 seconds</font>
      <dt><b>Plain access (with timestamps)</b>
      <dd>All 50 archives are opened and if the min and max timestamp in
	  the archive intersect the given interval, it is appended to the
	  list of archives to search.
	  Only a few archives are searched for a channel matching &lt;pattern&gt; and
	  data within timestamp is retrieved<br><font color=red>&rArr; ~6 seconds</font>
      <dt><b>Fastest access (with timestamps)</b>
      <dd>The MultiArchive-file itself contains a start- and stop-timestamp
          for each archive. If the min and max timestamp provided for
	  the archive intersect the given interval, it is appended to the
	  list of archives to search.
	  Only a few archives are searched for a channel matching &lt;pattern&gt; and
	  data within timestamp is retrieved<br><font color=red>&rArr; ~2 seconds</font>
      </dl>
      The absolute times measured will vary depending on platform/hardware,
      but the ratio will remain!
<P>
The most recent sub-archive has to be listed first,
followed by the next one back in time and so on
to the oldest sub-archive.
<P>
This type of archive is read-only!
<P>
For now, each individual archive is in the binary data format
(<A HREF="BinArchive.htm#Main">BinArchive</A>).
Later, it might be necessary to specify the type together with the name
for each archive. The master_version will then be incremented.
<BR>
If the "master" file is invalid, it is considered an ordinary BinArchive
directory file,
i.e. Tools based on the MultiArchive should work just like BinArchive-based
Tools when operating on a single archive.
<BR>
<H2>Details</H2>
No sophisticated merging technique is used.
Given a channel and point in time,
the MultiArchive will try to read this from the
first archive in the multi archive list,
then the next archive and so on until it succeeds.
<BR>
When combining archives with disjunct channel sets,
a read request for a channel will yield data
from the single archive that holds that channel.
<BR>
When channels are present in multiple archives,
a read request for a given point in time will
return values from the <I>first archive listed</I> in the master file
that has values for that channel and point in time.
<BR>
Consequently, one should avoid archives with overlapping time ranges.
If this cannot be avoided, the "most important" archive should be
listed first.
<H2>Interface</H2>
<UL>
<LI>
Open a MultiArchive for the given master file
<PRE>
   MultiArchive(const stdString &master_file, 
		const osiTime &from = nullTime,
		const osiTime &to = nullTime);
</PRE>
<LI>
All virtuals from <A HREF="ArchiveI.htm#Main">ArchiveI</A> are implemented,
except that the "write" routines fail for this read-only archive type.
<PRE>
</PRE>
</UL>
<HR WIDTH=40% ALIGN=LEFT>
<A HREF="index.htm#Main">Index</A>
<P ALIGN=CENTER>
<FONT SIZE=1>
Created from sources with <I>MakeDoc</I> Perl script.
</FONT>
</BLOCKQUOTE>
</P>
</BODY>
