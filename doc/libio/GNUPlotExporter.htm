<HTML>
<HEAD>
<TITLE>Class Documentation</TITLE>
<BODY BGCOLOR=#F0F0FF BACKGROUND="../blueback.jpg">
<link REL="STYLESHEET" HREF="../style.css" TYPE="text/css">
<BLOCKQUOTE>
<H1><A NAME=Main>GNUPlotExporter Class</A></H1>

GNUPlotExporter generates a text file for GNUPlot
together with a simple plotting script.
<BR>
The data file will be called "<filename>",
the script (unless using pipe) will be called "<filename>.plt".
<BR>
Implements <A HREF="Exporter.htm#Main">Exporter</A>.
<H2>Interface</H2>
<UL>
<LI>
Contrary to the simple <A HREF="Exporter.htm#Main">Exporter</A>,
<I>filename</I> has to be defined
for GNUPlotExporter because two files are created
and <I>filename</I> is used as a base name. <p> If
<em>reduce</em> is &gt; 0, data reduction will be performed.<br>
<PRE>
GNUPlotExporter (Archive &archive, const stdString &filename, int reduce = 0);
GNUPlotExporter (ArchiveI *archive, const stdString &filename, int reduce = 0);
</PRE>
<LI>
Issue GNUPlot commands to generate an image file
(<filename>.png)
<PRE>
   void makeImage()      { _make_image = true; }
   static const char *imageExtension();
</PRE>
<LI>
Call GNUPlot and run the command script via pipe
instead of dumping script to disk
<PRE>
   void usePipe()        { _use_pipe = true; }
   
private:
   bool _make_image;
   bool _use_pipe;
</PRE>
<LI>
# of buckets to reduce data into, 0 -> don't reduce
<PRE>
   int _reduce; 
</PRE>
</UL>
<HR WIDTH=40% ALIGN=LEFT>
<A HREF="index.htm#Main">Index</A>
<P ALIGN=CENTER>
<FONT SIZE=1>
Created from sources with <I>MakeDoc</I> Perl script.
</FONT>
</BLOCKQUOTE>
</P>
</BODY>
