<HTML>
<HEAD>
<TITLE>
CASI - ChannelArchiver Scripting Interface</TITLE>
<link REL="STYLESHEET" HREF="../style.css" TYPE="text/css">
</HEAD>

<BODY bgcolor="#B0B0FF" BACKGROUND="../blueback.jpg">

<BLOCKQUOTE>
<H1>CASI - ChannelArchiver Scripting Interface</H1>

<HR><H1> Contents </H1>
<UL><LI> <A HREF="#s1_">1. Accessing an Archive</A>
<UL><LI> <A HREF="#s1_1_">1.1. class archive</A>
</UL><LI> <A HREF="#s2_">2. Channel Information</A>
<UL><LI> <A HREF="#s2_1_">2.1. class channel</A>
</UL><LI> <A HREF="#s3_">3. Value Information</A>
<UL><LI> <A HREF="#s3_1_">3.1. class value</A>
</UL><LI> <A HREF="#s4_">4. Misc.</A>
<LI> <A HREF="#s5_">5. Questions, comments?</A>
</UL>

<P>
This scriping interface is meant to mimic the
behaviour of the C++ LibIO API to the ChannelArchiver
as close as possible.
Therefore you might consider crosschecking with
that documentation.


Most functions can generate a RuntimeError or
an UnknownError.


<P><TT><B>$casi_version = 1.0</B></TT>
<BLOCKQUOTE>[ Constant : char * ]
<BR></BLOCKQUOTE>

<A name="s1_">
<HR><H2>1. Accessing an Archive</H2></A>
<A name="s1_1_">
<H3>1.1. class archive</H3></A>
[ created from class archive ]<BR>
<P><TT><B>archive name </B></TT>
<BLOCKQUOTE>[ Constructor: returns archive * ]
<BR></BLOCKQUOTE>

<P><TT><B>rename obj {}</B></TT>
<BLOCKQUOTE>[ Destructor: returns void  ]
<BR></BLOCKQUOTE>

<P><TT><B>open name </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>findFirstChannel channel </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>findChannelByName name channel </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>findChannelByPattern pattern channel </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>name </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>write name hours_per_file </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>addChannel name channel </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>nextFileTime current_time </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<A name="s2_">
<HR><H2>2. Channel Information</H2></A>
<A name="s2_1_">
<H3>2.1. class channel</H3></A>
[ created from class channel ]<BR>
<P><TT><B>channel name </B></TT>
<BLOCKQUOTE>[ Constructor: returns channel * ]
<BR></BLOCKQUOTE>

<P><TT><B>rename obj {}</B></TT>
<BLOCKQUOTE>[ Destructor: returns void  ]
<BR></BLOCKQUOTE>

<P><TT><B>valid </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>name </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>next </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>getFirstTime </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>getLastTime </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>getFirstValue value </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>getLastValue value </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>getValueAfterTime time value </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>getValueBeforeTime time value </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>getValueNearTime time value </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>lockBuffer value </B></TT>
<BLOCKQUOTE>[ Member : returns int  ]
<BR></BLOCKQUOTE>

<P><TT><B>addBuffer value value_count </B></TT>
<BLOCKQUOTE>[ Member : returns void  ]
<BR></BLOCKQUOTE>

<P><TT><B>addValue value </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>releaseBuffer </B></TT>
<BLOCKQUOTE>[ Member : returns void  ]
<BR></BLOCKQUOTE>

<A name="s3_">
<HR><H2>3. Value Information</H2></A>
<A name="s3_1_">
<H3>3.1. class value</H3></A>
[ created from class value ]<BR>
<P><TT><B>value name </B></TT>
<BLOCKQUOTE>[ Constructor: returns value * ]
<BR></BLOCKQUOTE>

<P><TT><B>rename obj {}</B></TT>
<BLOCKQUOTE>[ Destructor: returns void  ]
<BR></BLOCKQUOTE>

<P><TT><B>valid </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>isInfo </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>type </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>count </B></TT>
<BLOCKQUOTE>[ Member : returns int  ]
<BR></BLOCKQUOTE>

<P><TT><B>get </B></TT>
<BLOCKQUOTE>[ Member : returns double  ]
<BR></BLOCKQUOTE>

<P><TT><B>getidx index </B></TT>
<BLOCKQUOTE>[ Member : returns double  ]
<BR></BLOCKQUOTE>

<P><TT><B>text </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>time </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>status </B></TT>
<BLOCKQUOTE>[ Member : returns char * ]
<BR></BLOCKQUOTE>

<P><TT><B>next </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>prev </B></TT>
<BLOCKQUOTE>[ Member : returns bool  ]
<BR></BLOCKQUOTE>

<P><TT><B>determineChunk until </B></TT>
<BLOCKQUOTE>[ Member : returns int  ]
<BR></BLOCKQUOTE>

<A name="s4_">
<HR><H2>4. Misc.</H2></A>
<P><TT><B>$HOURS_PER_MONTH = 24*31</B></TT>
<BLOCKQUOTE>[ Constant : int  ]
<BR>   depends on month, ... this is
                                      a magic number   
</BLOCKQUOTE>

<A name="s5_">
<HR><H2>5. Questions, comments?</H2></A>
<P>
Let me know: Kay-Uwe Kasemir, kasemir@lanl.gov

</BLOCKQUOTE></BODY>
</HTML>
