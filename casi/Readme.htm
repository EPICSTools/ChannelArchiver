<html>

<head>
<title>CASI</title>
<link REL="STYLESHEET" HREF="../doc/style.css" TYPE="text/css">
</head>

<body BGCOLOR="#B0B0FF" BACKGROUND="../doc/blueback.jpg">

<blockquote>
  <h1><I>CASI</I> - Channel Archive Scripting Interface</h1>
  See <a href="../doc/casi/default.htm">doc/casi/default.htm</a>
  on how to use this SWIG-based scripting interface to the
  ChannelArchiver I/O library.
    
  <h2>Compilation</h2>
  This extension is not built as part of the standard make system
  because it involves too many other tools that are not yet uniformly
  configurable as part of the EPICS make system.
  <br>
  Instead, there is a <a href="Makefile.WIN32">Makefile.WIN32</a> for
  MS Visual C++'s &quot;nmake&quot; and a
  <a href="Makefile.Unix">Makefile.Unix</a> for Unix' gnumake.
  For what it's worth, <a href="what_I_did.htm">what_I_did.htm</a>
  lists what I did to get going on a solaris machine where most
  parts were missing.<br>
  In general, this is the suggested procedure:
  <ul>
  <li>First, build the other portions of the ChannelArchiver:<br>
      Tools, LibIO, Engine, ...
  <li>Verify that swig is installed, if necessary get it:
      <a href="http://www.swig.org">www.swig.org</a>
  <li>Make sure that you have the tools that you intend to build this
      extension for:
      tcl/tk, python, ... and know where their includes and libraries are.<br>
      (Hint: For RedHat Linux, this means you not only need to have
      python installed but also the &quot;developer&quot; RPM for python)
  <li>Adjust Makefile.xxx to point to the correct path names for EPICS base,
      swig, tcl, python, ...
  <li>Call gnumake/nmake on your makefile, maybe specifying only the targets
      &quot;tcl&quot; or &quot;python&quot; to skip building what you
      don't need.
  </ul>
  SWIG was used to avoid platform dependencies. This also means that
  you have to check the swig manual first in case of errors. Link
  errors for building the shared modules are the most likely problem,
  but except for the swig manual and your system docs you're on
  your own with that...

  <h2>Usage with Python</h2>
  You'll need python, of course.
  I tried Python 1.5 as it comes with Redhat 6.1.
  It's also available for Win32 from
  <a href="http://www.python.org">http://www.python.org</a>.
  <br>
  For running the example scripts you also need:
  <ul>
  <li>Tk and BLT. Tk might be part of the python that you get
      initially, BLT is usually not.
      Find it at
      <a href="http://www.scriptics.com">http://www.scriptics.com</a>
      or <a href="http://www.tcltk.com/blt">http://www.tcltk.com/blt</a>.<br>
      Note that you need a version of tk that works with your version
      of python.
      The latest tk might be too new.<br>
      Similar: You need to build BLT for the version of tk that python uses.
  <li>Pmw, the python meta widget library, also from
      <a href="http://www.python.org">www.python.org</a>
  </ul>
  Set PYTHONPATH to include the casi directory
  (where casi.py and casic.dll/so/??? have
  been created in the compilation step), e.g.<br>
  export PYTHONPATH=/home/kasemir/Epics/extensions/src/ChannelArchiver/casi/python/O.Linux<br>

  <h2>Something completely unrelated:</h2>
  <em>If you have time to spare, go by air.</em>
  <br>
  I'm writing this on a Delta plane in Atlanta, 9/9/2000, around
  midnight. I was supposed to go from Cincinatty to Albuqueque
  but the flight was canceled. Then the replacement flight
  via Atlanta stopped in the middle of takeof, breaking hard,
  because some "light" in the copckpit went on and now they
  are waiting for the maintenance crew to bring a replacement
  module.
  If you can read this, all went well in the end.
  
</blockquote>
</body>
</html>












